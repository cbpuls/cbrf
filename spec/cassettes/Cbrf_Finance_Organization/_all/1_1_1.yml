---
http_interactions:
- request:
    method: post
    uri: https://www.cbr.ru/FO_ZoomWS/FinOrg.asmx
    body:
      encoding: ASCII-8BIT
      string: |
        <?xml version="1.0" encoding="UTF-8"?>
        <soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">
          <soap12:Body>
            <Search xmlns="http://web.cbr.ru/"/>
          </soap12:Body>
        </soap12:Envelope>
    headers:
      Content-Type:
      - application/soap+xml; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.cbr.ru
  response:
    status:
      code: 500
      message: Internal Server Error
    headers:
      Server:
      - ddos-guard
      Connection:
      - keep-alive
      Keep-Alive:
      - timeout=60
      Set-Cookie:
      - __ddg10_=1741876669; Domain=.cbr.ru; Path=/; Expires=Thu, 13-Mar-2025 14:57:49
        GMT
      - __ddg1_=GmBQErhzVSBFirD8Waog; Domain=.cbr.ru; HttpOnly; Path=/; Expires=Fri,
        13-Mar-2026 14:37:49 GMT
      - __ddg8_=C4J4tvMuvTSy2hwX; Domain=.cbr.ru; Path=/; Expires=Thu, 13-Mar-2025
        14:57:49 GMT
      - __ddg9_=62.213.99.14; Domain=.cbr.ru; Path=/; Expires=Thu, 13-Mar-2025 14:57:49
        GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '8833'
      Date:
      - Thu, 13 Mar 2025 14:37:49 GMT
      Cache-Control:
      - private
      X-Frame-Options:
      - SAMEORIGIN
      Vary:
      - Accept-Encoding
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 13 Mar 2025 14:37:49 GMT
recorded_with: VCR 6.3.1
